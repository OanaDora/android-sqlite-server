<?xml version="1.0" encoding="utf-8"?>
<!-- package name must be unique so suffix with "tests" so package loader doesn't ignore us -->
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
          package="org.devtcg.sqliteserver.tests"
          android:versionCode="1"
          android:versionName="1.0">
    <!-- We add an application tag here just so that we can indicate that
         this package needs to link against the android.test library,
         which is needed when building test cases. -->
    <application>
        <uses-library android:name="android.test.runner"/>

        <provider android:name=".support.SameProcessContentProvider"
                  android:authorities="org.devtcg.sqliteserver.tests.support.SameProcessContentProvider" />
        <provider android:name=".support.SeparateProcessContentProvider"
                  android:authorities="org.devtcg.sqliteserver.tests.support.SeparateProcessContentProvider"
                  android:process=":otro" />
        <service android:name=".support.SameProcessService" />
        <service android:name=".support.SeparateProcessService"
                 android:process=":otro" />

        <receiver android:name=".support.CrashOtroProcess"
                  android:process=":otro">
            <intent-filter>
                <action android:name="org.devtcg.sqliteserver.tests.ACTION_CRASH" />
            </intent-filter>
        </receiver>

    </application>
    <!--
    This declares that this application uses the instrumentation test runner targeting
    the package of org.devtcg.sqliteserver.sample.  To run the tests use the command:
    "adb shell am instrument -w org.devtcg.sqliteserver.sample.tests/android.test.InstrumentationTestRunner"
    -->
    <instrumentation android:name="android.test.InstrumentationTestRunner"
                     android:targetPackage="org.devtcg.sqliteserver.tests"
                     android:label="Tests for org.devtcg.sqliteserver"/>
</manifest>
